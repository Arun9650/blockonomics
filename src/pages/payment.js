import React, { useEffect, useState } from "react";
import { useContext } from "react";
import Head from "next/head";
import { Message_data } from "../../components/appcontext";

import Cookies from 'cookies'

import parseCookies from './../../lib/parseCookies'
import axios from "axios";

var cookie = require('cookie-cutter');
import { useCookies } from 'react-cookie';
// import Cookies from 'js-cookie'



export default function payment({data}) {


  const [userEnterData, setUserEnterData] = useCookies(["User"])

    console.log("data",data);
//   const { message } = useContext(Message_data);

//   console.log(message);

//   const [data, setData] = useState({});

//   console.log(data);

//   useEffect(() => {
//     setData(message);
//   }, []);
  // const cookie = new Cookies()

    console.log(userEnterData.User)

  const successfulPayment =  data.historyData.filter((item) => item.status === 1 && item.value > 0 );
  console.log("successfulPayment",successfulPayment[0]);

  const latestPayment  = successfulPayment[0];

  const latestPaymentValue = latestPayment.value;


  function payWithBitcoin() {
      // eslint-disable-next-line no-undef
      Blockonomics.widget({
        msg_area: "bitcoinpay",
        uid: data.responseID.uid,
        email: "arun02580@gmail.com",
      });
    }

  return (<>
       <Head>
        <title>Payment  App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script  crossOrigin="true" src="https://blockonomics.co/js/pay_widget.js"></script>
      </Head>

    <div className=" h-screen w-full">
      <button id="pay" onClick={payWithBitcoin}>Pay with Bitcoin</button>
      <div id="bitcoinpay"></div>
    </div>
    </>
  );
}



// export async function getInitialProps({res}) {

//     const cookies = parseCookies(req);
    
//     console.log(cookies.User)

//     //   const result = await  axios({
//     //     method: "post",
//     //     url: url,
//     //     headers: {
//     //       "Content-Type": "text/json",
//     //       "Authorization" : ' Bearer' + api_Key,
//     //     },
//     //     body: JSON.stringify(cookies.User),
//     //   })
    
//     //   console.log('response data ',res.data)
      
//     //   const data = res.data;

//       return {
//         props : {
//             data : cookies.User
//         }
//       }
    
//     }

payment.getInitialProps = async ({req,res}) =>  {
    // const cookies = parseCookies(req);
    const cookies = new Cookies(req, res)
   const resutl =  cookies.get("User")
  //  console.log(resutl)
  //  console.log(typeof resutl)
   const result = (decodeURIComponent(resutl))
    // console.log(result)
    const api_key = "3Rq4mmTlEt7eCy8R4vw7lYarXNaFj4CKtqWqExNEtOA";
    const url = "https://www.blockonomics.co/api/create_temp_product";

   let a  = JSON.parse(result)
  //  console.log(a)

   const data =  {
          
    "parent_uid":a.parent_uid,
  "product_name":a.product_name,
    "product_description":a.product_description,
      "value":a.value,
      "extra_data":a.email,
      
      }

      console.log(data)


      // console.log(JSON.parse(data))
  


      const options = {
        // The method is POST because we are sending data.
        method: 'POST',
        // Tell the server we're sending JSON.
        headers: {
          'Content-Type': 'application/json',
          Authorization: "Bearer " + api_key,
        },
        // Body of the request is the JSON data we created above.
        body: JSON.stringify(data),
      }


      const response = await fetch(url, options)

      console.log(response)
      const responseID = await response.json()
       


      const responseOFHistory = await axios({
            method: 'get',
            url: 'https://www.blockonomics.co/api/merchant_orders?limit=5',
            headers: {
              'content-type': 'application/json',
              'Authorization':'Bearer 3Rq4mmTlEt7eCy8R4vw7lYarXNaFj4CKtqWqExNEtOA'
        
          },
          
          })
          const historyData = responseOFHistory.data

          console.log(historyData)


    // const response = await axios({
    //     method:'post',
    //     url:url,
    //     headers: {
    //               'content-type': 'application/json',
    //               'Authorization':'Bearer 3Rq4mmTlEt7eCy8R4vw7lYarXNaFj4CKtqWqExNEtOA'
    //           },

    //     body: JSON.stringify(data)
    // })


    // console.log(responseID)
//    console.log(JSON.parse(resutl))

const totalData = {responseID,historyData}
    

    return {
        data: totalData
    }
}